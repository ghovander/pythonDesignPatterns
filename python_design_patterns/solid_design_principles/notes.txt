SOLID Design Principles
- The principles were introduced by Robert C. Martin
- The are frequently referenced in modern design pattern literature

Single Responsibility Principle = Separation of Concerns
- A class should have a single reason to change and that change should be related to primary responsibility of the class
- This design pattern prevents the anti-pattern of having god objects

Open-Closed Principle
- Open to Extension, Closed to Modification
- It is much safer to extend code that has already been tested, instead of directly modifying that code in order to make you enhancements.

Design Patterns
- Outside of the stand Gang of Four design patterns, we have enterprise design patterns

Combinator
- Combines two specifications into a meta specification

Liskov-Substitution Principle
- Inherited classes from the base class should be able to be work correctly with a given interface
